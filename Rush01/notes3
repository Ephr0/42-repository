New algorithm for solving.

Fill using top and bottom values, check using a table of possible correct answers. Eg
First 4 numbers in the array are paired with their position + 4, so top and bottom.
Array is filled with values from the first of each possible combination
then the next values, input 8 + 4, will be used to test if it is correct, as soon as it fails it goes back to trying a different combination
Iterate through combinations
Test
repeat, 
if all possible combinations are tried, return error.

2, 2, 3, 1, 2, 3, 1, 2

^ x, x, x, ^


1 {x, x, x, x} 1 - no valid possible combinations, return error

1 {x, x, x, x} 2 - two valid possible combinations
1 {4, 1, 2, 3} 2
1 {4, 2, 1, 3} 2 

1 {x, x, x, x} 3 - two valid possible combinations
1 {4. 3. 1. 2} 3
1 {4, 1, 3, 2} 3 

1 {x, x, x, x} 4 - 1 valid combination
1 {4, 3, 2, 1} 4

2 {x, x, x, x} 1 - two combinations, same as 1 - 2 but in reverse
2 {3, 2, 1, 4} 1
2 {3, 1, 2, 4} 1

2 {x, x, x, x} 2 - five possible combinations
2 {1, 4, 2, 3} 2
2 {2, 4, 1, 3} 2
2 {3, 1, 4, 2} 2
2 {3, 2, 4, 1} 2
2 {3, 4, 1, 2} 2

2 {x, x, x, x} 3 - three possible combinations
2 {3, 4, 2, 1} 3
2 {2, 4, 3, 1} 3
2 {1, 4, 3, 2} 3

2 {x, x, x, x} 4 - no possible combinations

3 1 = 1 3 table but in reverse
3 2 = 2 3 table but in reverse
3 3 = impossible
3 4 = impossible

2, 2  = 5 possible combinations
2, 3 = 3 possible combinations
3, 1 = 2 possible combinations
1, 2 = 2 possible combinations

5 * 3 * 2 * 2 = 60 possible combinations

1, 1, 1, 1

1, 1, 1, 2

1, 1, 2, 1

1, 1, 2, 2

1, 2, 1, 1 

until all possible combinations are tried, testing each one.
Use left to right values as the test

Two dimensional array
0 - holds counter values
1 - holds counter base

increase value by 1, modulo its base.
increase next value by previous value, divided by its base


increase value by i


e
